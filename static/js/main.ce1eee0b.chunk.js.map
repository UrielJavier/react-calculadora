{"version":3,"sources":["index.js"],"names":["PantallaOperaciones","className","this","props","resultado","operacion","React","Component","PantallaResultado","Tecla","type","onClick","id","tipo","Historico","historico","operaciones","map","element","index","goBack","resultados","Calculadora","state","resultadoMostrar","resultadoIntermedio","historicoResultados","historicoOperacion","ultimoOperador","ultimoCaracter","ultimoNumero","operadores","numeros","i","operator","undefined","concat","handleClick","console","log","isOperator","setState","replace","changeOperator","ultimoNumeroAux","length","res","doOperation","ultimoResultado","addNumber","addOperator","resultadoFinal","resetCalculator","char","numeroNuevo","operador","parseFloat","historicoOperacionAux","push","historicoResultadosAux","numerosAux","operadoresAux","pop","event","target","substring","filter","x","bind","renderButton","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce1eee0b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass PantallaOperaciones extends React.Component {\n    render(){\n        return <div className={'pantallaOperaciones'+(this.props.resultado!=0 ? ' show' : '')}>{this.props.operacion}</div>\n    }\n}\nclass PantallaResultado extends React.Component {\n    render(){\n        return <div className='pantallaResultado'>{this.props.resultado}</div>\n    }\n}\n\nfunction Tecla (props) {\n        return <button type='button' onClick={props.onClick} id={props.id} className={'button '+props.tipo}>{props.id}</button>\n}\n\nfunction Historico (props) {\n\n    let historico = props.operaciones.map((element,index) => {\n        return <div id={'historico_'+index}className='elementoHistorial' onClick={(index) => props.goBack(index)}>\n            {element + ' = ' +props.resultados[index]}\n        </div>\n    });\n\n    return <div className={'historico'}>{historico}</div>\n}\n\n\nclass Calculadora extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            operacion: '',\n            resultadoMostrar: 0,\n            resultadoIntermedio: 0,\n            historicoResultados: [],\n            historicoOperacion: [],\n            ultimoOperador:'',\n            ultimoCaracter:'',\n            ultimoNumero:'',\n            operadores:[],\n            numeros:[]\n        }\n    }\n\n    renderButton(i,operator){\n        let tipo = (operator !== undefined && operator === true) ? 'operator' : 'number';\n        if(i==='='){\n            tipo = tipo.concat(' equals');\n        }else if(i==='รท'){\n            i = '/';\n        }\n        return <Tecla id={i} tipo={tipo} onClick={()=>this.handleClick(i)}></Tecla>\n    }\n\n    handleClick(i){\n        console.log(i)\n\n        if(i==='C'){\n            this.resetCalculator()\n            return;\n        \n        }else if(i==='=' && this.state.ultimoCaracter==='='){\n            return\n\n        // Si se introduce un operador y no hay nada\n        }else if(this.state.operacion===\"\" && this.isOperator(i)){\n\n        // Si se introduce un operador, y el ultimo caracter es un numero\n        }else if(this.isOperator(i) && (!this.isOperator(this.state.ultimoCaracter)\n                    || this.state.ultimoCaracter==='=')){\n                        \n            this.setState({operacion:this.state.operacion+i});\n            this.addNumber();\n            this.addOperator(i);\n\n            if(i==='='){\n                this.resultadoFinal()\n            }\n\n            if(this.state.resultadoMostrar!==0)this.setState({resultadoIntermedio:this.state.resultadoMostrar})\n            \n            \n        // Si se introduce un operador, y el ultimo caracter es un operador (se sobreescribe)\n        }else if(this.isOperator(this.state.ultimoCaracter) && this.isOperator(i) \n                && this.state.ultimoCaracter!=='='){\n                    \n            this.setState({operacion:this.state.operacion.replace(/.$/,i)});\n            this.changeOperator(i);\n\n        // Si se introduce un numero\n        }else if(!this.isOperator(i)){\n            console.log('se introduce parte de un numero')\n            let ultimoNumeroAux = this.state.ultimoNumero+i\n            this.setState({operacion:this.state.operacion+i});\n            this.setState({ultimoNumero: ultimoNumeroAux})\n\n            // Si se introducuce un numero despues de un operador (salvo el -)\n            if(this.state.numeros.length>0 && this.state.operadores.length>0 && !this.isOperator(i) && i!=='.'){\n                let res = this.doOperation(this.state.resultadoIntermedio,ultimoNumeroAux,this.state.operadores[this.state.operadores.length-1])\n                console.log(res)\n                this.setState({ultimoResultado:res})\n                this.setState({resultadoMostrar:res})\n            }\n        }\n        \n        if(this.state.numeros.length===1 && this.state.resultadoIntermedio===0){\n            this.setState({resultadoIntermedio:this.state.numeros[0]})\n        }\n        \n        this.setState({ultimoCaracter:i})\n    }\n\n    isOperator(char){\n        return (char==='+' || char==='-' || char==='/' || char==='x' || char==='=' \n                || char==='%' || char==='DEL')\n    }\n\n    doOperation(ultimoResultado,numeroNuevo,operador){\n        console.log(ultimoResultado + '  ' + numeroNuevo + '  ' + operador)\n        \n        switch(operador){\n            case '+':\n                return parseFloat(ultimoResultado) + parseFloat(numeroNuevo);\n            case '-':\n                return parseFloat(ultimoResultado) - parseFloat(numeroNuevo);\n            case '/':\n                return parseFloat(ultimoResultado) / parseFloat(numeroNuevo);\n            case 'x':\n                return parseFloat(ultimoResultado) * parseFloat(numeroNuevo);\n            case '%':\n                return (parseFloat(ultimoResultado) / 100) * parseFloat(numeroNuevo);\n        }\n    }\n\n    resetCalculator(){\n        this.setState({\n            operacion: '',\n            resultadoIntermedio: 0,\n            resultadoMostrar: 0,\n            ultimoOperador:'',\n            ultimoCaracter:'',\n            ultimoNumero:'',\n            operadores:[],\n            numeros:[],\n            historicoOperacion:[],\n            historicoResultados:[]\n        })\n    }\n\n    resultadoFinal(){\n        let historicoOperacionAux = this.state.historicoOperacion;\n        historicoOperacionAux.push(this.state.operacion);\n\n        let historicoResultadosAux = this.state.historicoResultados;\n        historicoResultadosAux.push(this.state.resultadoMostrar);\n\n        this.setState({\n            historicoOperacion: historicoOperacionAux,\n            historicoResultados: historicoResultadosAux,\n            operacion:this.state.resultadoMostrar,\n            resultadoMostrar:0\n            })\n    }\n\n    addNumber(){\n        let numerosAux = this.state.numeros;\n        numerosAux.push(this.state.ultimoNumero);\n        this.setState({numeros:numerosAux,ultimoNumero:''});\n    }\n\n    addOperator(operator){\n        let operadoresAux = this.state.operadores;\n        operadoresAux.push(operator);\n        this.setState({operadores:operadoresAux,ultimoOperador:operator});\n    }\n\n    changeOperator(operator){\n        let operadoresAux = this.state.operadores;\n        operadoresAux.pop();\n        operadoresAux.push(operator);\n        this.setState({operadores:operadoresAux,ultimoOperador:operator});\n    }\n\n    goBack(event){\n        let index = event.target.id.substring(10);\n        console.log(index)\n        if(index>-1){\n            this.setState({\n                historicoOperacion: this.state.historicoOperacion.filter((x,i) => i<= index),\n                historicoResultados: this.state.historicoResultados.filter((x,i) => i<= index),\n                operacion: this.state.historicoOperacion[index],\n                resultadoMostrar: this.state.historicoResultados[index]\n            });\n        }\n    }\n    \n    render(){\n        return (\n            <div className='calculadora'>\n                <div className='pantallas'>\n                    <PantallaOperaciones operacion={this.state.operacion} resultado={this.state.resultadoMostrar}></PantallaOperaciones>\n                    <PantallaResultado resultado={this.state.resultadoMostrar}></PantallaResultado>\n                </div>\n                <div className='historicoContenedor'>\n                    <Historico operaciones={this.state.historicoOperacion} \n                            resultados={this.state.historicoResultados}\n                            goBack={this.goBack.bind(this)}></Historico>\n                    <div className='espacioHistorico'></div>\n                </div>\n                <div className='teclado'>\n                    <div className='fila'>\n                        {this.renderButton('C')}\n                        {this.renderButton('%',true)}\n                        {this.renderButton('รท',true)}\n                    </div>\n                    <div className='fila'>\n                        {this.renderButton(7)}\n                        {this.renderButton(8)}\n                        {this.renderButton(9)}\n                        {this.renderButton('x',true)}\n                    </div>\n                    <div className='fila'>\n                        {this.renderButton(4)}\n                        {this.renderButton(5)}\n                        {this.renderButton(6)}\n                        {this.renderButton('-',true)}\n                    </div>\n                    <div className='fila'>\n                        {this.renderButton(1)}\n                        {this.renderButton(2)}\n                        {this.renderButton(3)}\n                        {this.renderButton('+',true)}\n                    </div>\n                    <div className='fila'>\n                        {this.renderButton('.')}\n                        {this.renderButton(0)}\n                        {this.renderButton('=',true)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Calculadora />,\n    document.getElementById('root')\n);"],"sourceRoot":""}
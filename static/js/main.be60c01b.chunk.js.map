{"version":3,"sources":["index.js"],"names":["PantallaOperaciones","resultado","operacion","className","PantallaResultado","Tecla","onClick","tipo","id","type","Historico","props","historico","operaciones","map","element","index","goBack","resultados","Calculadora","state","resultadoMostrar","resultadoIntermedio","historicoResultados","historicoOperacion","ultimoOperador","ultimoCaracter","ultimoNumero","operadores","numeros","i","operator","concat","handleClick","console","log","this","isOperator","setState","replace","changeOperator","ultimoNumeroAux","length","res","doOperation","ultimoResultado","addNumber","addOperator","resultadoFinal","resetCalculator","char","numeroNuevo","operador","parseFloat","historicoOperacionAux","historicoResultadosAux","numerosAux","operadoresAux","slice","event","target","substring","filter","x","bind","renderButton","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be60c01b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst PantallaOperaciones = ({resultado,operacion}) =>\n        (<div className={'pantallaOperaciones'+(resultado!=0 ? ' show' : '')}>\n            {operacion}\n        </div>)\n\nconst PantallaResultado = ({resultado}) =>\n        (<div className='pantallaResultado'>\n            {resultado}\n        </div>)\n\nconst Tecla = ({onClick,tipo,id}) =>    \n        (<button type='button' onClick={onClick} \n            id={id} className={'button '+tipo}>\n                {id}\n        </button>)\n\n\nfunction Historico (props) {\n\n    let historico = props.operaciones.map((element,index) => {\n        return <div id={'historico_'+index}className='elementoHistorial' onClick={(index) => props.goBack(index)}>\n            {element + ' = ' +props.resultados[index]}\n        </div>\n    });\n\n    return <div className={'historico'}>{historico}</div>\n}\n\n\nclass Calculadora extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            operacion: '',\n            resultadoMostrar: 0,\n            resultadoIntermedio: 0,\n            historicoResultados: [],\n            historicoOperacion: [],\n            ultimoOperador:'',\n            ultimoCaracter:'',\n            ultimoNumero:'',\n            operadores:[],\n            numeros:[]\n        }\n    }\n\n    renderButton(i,operator){\n        let tipo = (operator === true) ? 'operator' : 'number';\n        if(i==='='){\n            tipo = tipo.concat(' equals');\n        }else if(i==='รท'){\n            i = '/';\n        }\n        return <Tecla id={i} tipo={tipo} onClick={()=>this.handleClick(i)}></Tecla>\n    }\n\n    handleClick(i){\n        console.log(i)\n\n        if(i==='C'){\n            this.resetCalculator()\n            return;\n        \n        }else if(i==='=' && this.state.ultimoCaracter==='='){\n            return\n\n        // Si se introduce un operador y no hay nada\n        }else if(this.state.operacion===\"\" && this.isOperator(i)){\n\n        // Si se introduce un operador, y el ultimo caracter es un numero\n        }else if(this.isOperator(i) && (!this.isOperator(this.state.ultimoCaracter)\n                    || this.state.ultimoCaracter==='=')){\n                        \n            this.setState({operacion:this.state.operacion+i});\n            this.addNumber();\n            this.addOperator(i);\n\n            if(i==='='){\n                this.resultadoFinal()\n            }\n\n            if(this.state.resultadoMostrar!==0)this.setState({resultadoIntermedio:this.state.resultadoMostrar})\n            \n            \n        // Si se introduce un operador, y el ultimo caracter es un operador (se sobreescribe)\n        }else if(this.isOperator(this.state.ultimoCaracter) && this.isOperator(i) \n                && this.state.ultimoCaracter!=='='){\n                    \n            this.setState({operacion:this.state.operacion.replace(/.$/,i)});\n            this.changeOperator(i);\n\n        // Si se introduce un numero\n        }else if(!this.isOperator(i)){\n            let ultimoNumeroAux = this.state.ultimoNumero+i\n            this.setState({operacion:this.state.operacion+i,\n                            ultimoNumero: ultimoNumeroAux})\n\n            // Si se introducuce un numero despues de un operador (salvo el -)\n            if(this.state.numeros.length>0 && this.state.operadores.length>0 && !this.isOperator(i) && i!=='.'){\n                let res = this.doOperation(this.state.resultadoIntermedio,ultimoNumeroAux,this.state.operadores[this.state.operadores.length-1])\n                this.setState({ultimoResultado:res,\n                            resultadoMostrar:res})\n            }\n        }\n        \n        this.setState({ultimoCaracter:i})\n    }\n\n    isOperator(char){\n        return (char==='+' || char==='-' || char==='/' || char==='x' || char==='=' \n                || char==='%' || char==='DEL')\n    }\n\n    doOperation(ultimoResultado,numeroNuevo,operador){\n        console.log(ultimoResultado + '  ' + numeroNuevo + '  ' + operador)\n        \n        switch(operador){\n            case '+':\n                return parseFloat(ultimoResultado) + parseFloat(numeroNuevo);\n            case '-':\n                return parseFloat(ultimoResultado) - parseFloat(numeroNuevo);\n            case '/':\n                return parseFloat(ultimoResultado) / parseFloat(numeroNuevo);\n            case 'x':\n                return parseFloat(ultimoResultado) * parseFloat(numeroNuevo);\n            case '%':\n                return (parseFloat(ultimoResultado) / 100) * parseFloat(numeroNuevo);\n        }\n    }\n\n    resetCalculator(){\n        this.setState({\n            operacion: '',\n            resultadoIntermedio: 0,\n            resultadoMostrar: 0,\n            ultimoOperador:'',\n            ultimoCaracter:'',\n            ultimoNumero:'',\n            operadores:[],\n            numeros:[],\n            historicoOperacion:[],\n            historicoResultados:[]\n        })\n    }\n\n    resultadoFinal(){\n        let historicoOperacionAux = this.state.historicoOperacion.concat(this.state.operacion);\n        let historicoResultadosAux = this.state.historicoResultados.concat(this.state.resultadoMostrar);\n\n        this.setState({\n            historicoOperacion: historicoOperacionAux,\n            historicoResultados: historicoResultadosAux,\n            operacion:this.state.resultadoMostrar,\n            resultadoMostrar:0\n            })\n    }\n\n    addNumber(){\n        let numerosAux = this.state.numeros.concat(this.state.ultimoNumero);\n        \n        console.log(this.state.numeros.length===1)\n        if(numerosAux.length===1 && this.state.resultadoIntermedio===0){\n            this.setState({resultadoIntermedio:numerosAux[0]})\n        }\n        \n        this.setState({numeros:numerosAux,ultimoNumero:''});\n    }\n\n    addOperator(operator){\n        let operadoresAux = this.state.operadores.concat(operator);\n        this.setState({operadores:operadoresAux,ultimoOperador:operator});\n    }\n\n    changeOperator(operator){\n        let operadoresAux = this.state.operadores;\n        operadoresAux.slice(0,-1);\n        operadoresAux.concat(operator);\n        this.setState({operadores:operadoresAux,ultimoOperador:operator});\n    }\n\n    goBack(event){\n        let index = event.target.id.substring(10);\n        console.log(index)\n        if(index>-1){\n            this.setState({\n                historicoOperacion: this.state.historicoOperacion.filter((x,i) => i<= index),\n                historicoResultados: this.state.historicoResultados.filter((x,i) => i<= index),\n                operacion: this.state.historicoOperacion[index],\n                resultadoMostrar: this.state.historicoResultados[index]\n            });\n        }\n    }\n    \n    render(){\n        return (\n            <div className='calculadora'>\n                <div className='pantallas'>\n                    <PantallaOperaciones operacion={this.state.operacion} resultado={this.state.resultadoMostrar}></PantallaOperaciones>\n                    <PantallaResultado resultado={this.state.resultadoMostrar}></PantallaResultado>\n                </div>\n                <div className='historicoContenedor'>\n                    <Historico operaciones={this.state.historicoOperacion} \n                            resultados={this.state.historicoResultados}\n                            goBack={this.goBack.bind(this)}></Historico>\n                    <div className='espacioHistorico'></div>\n                </div>\n                <div className='teclado'>\n                    <div className='fila'>\n                        {this.renderButton('C')}\n                        {this.renderButton('%',true)}\n                        {this.renderButton('รท',true)}\n                    </div>\n                    <div className='fila'>\n                        {this.renderButton(7)}\n                        {this.renderButton(8)}\n                        {this.renderButton(9)}\n                        {this.renderButton('x',true)}\n                    </div>\n                    <div className='fila'>\n                        {this.renderButton(4)}\n                        {this.renderButton(5)}\n                        {this.renderButton(6)}\n                        {this.renderButton('-',true)}\n                    </div>\n                    <div className='fila'>\n                        {this.renderButton(1)}\n                        {this.renderButton(2)}\n                        {this.renderButton(3)}\n                        {this.renderButton('+',true)}\n                    </div>\n                    <div className='fila'>\n                        {this.renderButton('.')}\n                        {this.renderButton(0)}\n                        {this.renderButton('=',true)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Calculadora />,\n    document.getElementById('root')\n);"],"sourceRoot":""}